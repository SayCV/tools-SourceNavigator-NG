# Borland C++ 4.5 makefile for Tk
#
# Copyright (c) 1995-1996 by Sun Microsystems, Inc.
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#


#
# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build
# TCLDIR = location of top of Tcl source heirarchy
#

TMPDIR	= .
TOOLS	= d:\bc45
TCLDIR	= D:\tcl7.5
TKDIR	= D:\tk4.1
TIXDIR  = D:\Tix4.1a2

# uncomment the following line to compile with symbols
#DEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES	=TCL_MEM_DEBUG

# You shouldn't need to change anything below this line
# -------------------------------------------------------------------

#
# Borland C++ tools
#

BORLAND = $(TOOLS)
IMPLIB  = Implib
BCC32   = Bcc32
BCC     = Bcc
RC	= brcc32
CP      = copy
RM      = del 

TCL_INCLUDES	= $(TCLDIR)\generic;$(TCLDIR)\win
TK_INCLUDES	= $(TKDIR)\generic;$(TKDIR)\xlib;$(TKDIR)\win
TIX_INCLUDES	= $(TIXDIR)\include;$(TIXDIR)\generic;$(TIXDIR)\win
INCLUDES	= $(BORLAND)\include;$(TIX_INCLUDES);$(TK_INCLUDES);$(TCL_INCLUDES)

LIBDIRS =	$(BORLAND)\lib
TCLLIBDIR =	$(TCLDIR)\win
TKLIBDIR =	$(TKDIR)\win
TIXLIBDIR =	$(TIXDIR)\win


!ifndef DEBUG

# these macros cause maximum optimization and no symbols
DEBUGLDFLAGS = 
DEBUGCCFLAGS = -v- -vi- -O2

!else

# these macros enable debugging
DEBUGLDFLAGS = -v
DEBUGCCFLAGS = -k -Od -v

!endif

DEFINES = _RTLDLL;$(DEBUGDEFINES)

PROJECTCCFLAGS= $(DEBUGCCFLAGS) -w-par -w-stu

LNFLAGS_dll = -Tpd -aa -c $(DEBUGLDFLAGS) $(BORLAND)\lib\c0d32
LNLIBS_dll =	$(TKLIBDIR)\$(TKLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i
LNLIBS_tixdll =	$(TIXLIBDIR)\$(TIXLIB) $(TKLIBDIR)\$(TKLIB) $(TCLLIBDIR)\$(TCLLIB) import32 cw32i

# 
# Global makefile settings
#

.AUTODEPEND
.CACHEAUTODEPEND

.suffixes: .c .dll .lib .obj .exe

.path.c=.
.path.obj=$(TMPDIR)

OBJS = $(TMPDIR)\Demo.obj

TCLLIB = tcl75.lib
TKLIB = tk41.lib
TIXLIB = tix41.lib
TCLDLL = tcl75.dll
TKDLL = tk41.dll
TIXDLL = tix41.dll

# This target is a DLL that depends only on Tcl and TK
#
DEMO_DLL = demo.dll

# This target is a DLL that depends on Tcl, TK and Tix
#
DEMO_TIX_DLL = demo_tix.dll

#
# Targets
#

all: cfgdll $(DEMO_DLL) cfgcln

tix: cfgdll $(DEMO_TIX_DLL) cfgcln

# Implicit Targets

.c.obj:
	@$(BCC32) {$< }

.dll.lib:
	$(IMPLIB) -c $@ $<

#
# Configuration file targets - these files are implicitly used by the compiler
#

cfgdll:
	@$(CP) &&|
		-n$(TMPDIR) -I$(INCLUDES) -c -WD
		-D$(DEFINES) -3 -d $(PROJECTCCFLAGS)
| bcc32.cfg >NUL

cfgcln:
	@$(RM) bcc32.cfg

#
# DLL targets
#

$(DEMO_DLL): $(OBJS) demo.def
	tlink32 @&&|
$(LNFLAGS_dll) $(OBJS)
$@
-x
$(LNLIBS_dll)
demo.def
|

#
# DLL targets
#

$(DEMO_TIX_DLL): $(OBJS) demo.def
	tlink32 @&&|
$(LNFLAGS_dll) $(OBJS)
$@
-x
$(LNLIBS_tixdll)
demo.def
|


# The following rule automatically generates a tix.def file containing
# an export entry for every public symbol in the $(TKDLL) library.

demo.def: $(OBJS)
	$(TCLLIBDIR)\dumpexts.exe -o $@ $(DEMO_DLL) @&&|
		$(OBJS)
|

# remove all generated files

clean:
	$(RM) $(DEMO_DLL)
	$(RM) $(DEMO_TIX_DLL)
	$(RM) demo.def
	$(RM) $(TMPDIR)\*.obj
	$(RM) bcc32.cfg
