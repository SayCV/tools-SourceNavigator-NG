package require tcltest

tcltest::test simple-1 {two input files} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    if {[winfo exists .t]} {
        destroy .t
    }
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    tcltest::makeFile {int ONE;} f1.c
    tcltest::makeFile {int TWO;} f2.c
    $d start int {f1.c f2.c} 0 10
    $d finish
    $t get 1.0 {end - 1 char}
} "f1.c:1:int ONE\;\nf2.c:1:int TWO\;\n"

tcltest::test highlight-1 {check highlighting} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    if {[winfo exists .t]} {
        destroy .t
    }
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    tcltest::makeFile {int ONE;} f1.c
    tcltest::makeFile {int TWO;} f2.c
    $d start int {f1.c f2.c} 0 10
    $d finish
    $t tag ranges grep
} {1.7 1.10 2.7 2.10}

tcltest::test nocase-1 {check case insensitivity} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    if {[winfo exists .t]} {
        destroy .t
    }
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    tcltest::makeFile {int ONE;} f1.c
    tcltest::makeFile {INT TWO;} f2.c
    $d start int {f1.c f2.c} 1 10
    $d finish
    $t get 1.0 {end - 1 char}
} "f1.c:1:int ONE\;\nf2.c:1:INT TWO\;\n"

tcltest::test crlf-1 {check that mixing cr and
        crlf in the same file is ok} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    destroy .t
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    set data    "int ONE;\r\n"
    append data "int TWO;\n"
    append data "int THREE;\r\n"
    tcltest::makeFile $data f1.c
    $d start int f1.c 0 10
    $d finish
    $t get 1.0 {end - 1 char}
} "f1.c:1:int ONE\;\nf1.c:2:int TWO\;\nf1.c:3:int THREE;\n"

tcltest::test dash-1 {a pattern that starts with - is ok} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    destroy .t
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    set data    "hi there\n"
    append data "-hi there\n"
    tcltest::makeFile $data f1.c
    $d start "-hi" f1.c 0 10
    $d finish
    $t get 1.0 {end - 1 char}
} "f1.c:2:-hi there\n"

tcltest::test maxmatch-1 {exactly max matches} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    destroy .t
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    set data    "HELLO 1\n"
    append data "HELLO 2\n"
    append data "HELLO 3\n"
    tcltest::makeFile $data f1.c
    $d start HELLO f1.c 0 3
    $d finish
    $t get 1.0 {end - 1 char}
} "f1.c:1:HELLO 1\nf1.c:2:HELLO 2\nf1.c:3:HELLO 3\n"

tcltest::test maxmatch-2 {max+1 matches} {
    if {[llength [itcl::find object tgd]]} {
        itcl::delete object tgd
    }
    destroy .t
    set d [sourcenav::TclGrepDriver tgd]
    set t [text .t]
    $d setTextWidget $t
    set data    "HELLO 1\n"
    append data "HELLO 2\n"
    append data "HELLO 3\n"
    append data "HELLO 4\n"
    tcltest::makeFile $data f1.c
    $d start HELLO f1.c 0 3
    $d finish
    $t get 1.0 {end - 1 char}
} "f1.c:1:HELLO 1\nf1.c:2:HELLO 2\nf1.c:3:HELLO 3\n*** TRUNCATED ***\n"


# Cleanup

if {[llength [itcl::find object tgd]]} {
    itcl::delete object tgd
}
if {[winfo exists .t]} {
    destroy .t
}

eval {file delete} [glob f*.c]
